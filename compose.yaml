# Docker Compose file for Cosmos DB and other services

version: '3.8'  # Specify the version of the Compose file format

services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: production
      # Cosmos DB connection string with required parameters
      MONGODB_URI: mongodb+srv://osamzahoor:us@m@123@cosmos-stream.mongocluster.cosmos.azure.com/?ssl=true&replicaSet=globaldb&retrywrites=false&maxIdleTimeMS=120000&appName=@cosmos-stream@&authSource=admin
      ACCOUNT_NAME: streamcosmosstorage  # Azure Storage account name
      CONTAINER_NAME: blobby  # Azure Blob Storage container name
      SAS_TOKEN: sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2025-01-09T23:14:03Z&st=2025-01-09T15:14:03Z&spr=https,http&sig=4S6Gsb85aHHaVVYZpPmMZ64XZwMSZXKBLIWGHkU56ig%3D
      # Optional: Use this line for the connection string with SAS token
      AZURE_STORAGE_CONNECTION_STRING: BlobEndpoint=https://streamcosmosstorage.blob.core.windows.net/;QueueEndpoint=https://streamcosmosstorage.queue.core.windows.net/;FileEndpoint=https://streamcosmosstorage.file.core.windows.net/;TableEndpoint=https://streamcosmosstorage.table.core.windows.net/;SharedAccessSignature=sv=2022-11-02&ss=bfqt&srt=sco&sp=rwdlacupiytfx&se=2025-01-09T23:14:03Z&st=2025-01-09T15:14:03Z&spr=https,http&sig=4S6Gsb85aHHaVVYZpPmMZ64XZwMSZXKBLIWGHkU56ig%3D
    ports:
      - 5000:5000
    depends_on:
      # Ensure that the Cosmos DB emulator is accessible before the server starts
      - cosmos

  cosmos:
    image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator  # Azure Cosmos DB Emulator image
    restart: always
    environment:
      AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 1
      AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: "true"
    ports:
      - 8081:8081  # Expose the Cosmos DB emulator HTTPS endpoint
      - 10250-10255:10250-10255  # Ports required for the emulator
    volumes:
      - cosmos-data:/CosmosDB.Emulator/config
    command: "-partitioncount 1 -enableDataPersistence true"  # Start the emulator with specific options

  frontend:
    build: ./client
    volumes:
      - ./client:/app
      - /app/node_modules
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=development

volumes:
  mongo-data:  # Keep for MongoDB (if needed in a hybrid setup)
  cosmos-data:  # Define a named volume for Cosmos DB data persistence
